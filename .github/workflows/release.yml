name: Create Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      release_tag:
        description: 'Release tag (e.g., v1.0.0)'
        required: true
        type: string

jobs:
  create-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          lfs: true
      
      - name: Pull LFS files
        run: git lfs pull

      - name: Determine release tag
        id: get_tag
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "tag=${{ github.event.inputs.release_tag }}" >> $GITHUB_OUTPUT
          else
            echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          fi

      - name: Create architecture-specific zip files
        run: |
          cd output
          for arch in */; do
            if [ -d "$arch" ]; then
              arch_name="${arch%/}"
              echo "Creating zip for $arch_name..."
              # Check if the directory has any files
              if [ "$(ls -A "$arch")" ]; then
                zip -r "../stheno-toolkit-${arch_name}.zip" "$arch_name"
              else
                echo "Skipping empty directory: $arch_name"
              fi
            fi
          done
          cd ..
          echo "Created the following zip files:"
          ls -la stheno-toolkit-*.zip 2>/dev/null || echo "No zip files created!"

      - name: Generate release notes
        id: release_notes
        run: |
          TAG="${{ steps.get_tag.outputs.tag }}"
          
          echo "## Stheno Embedded Toolkit Release $TAG" > release_notes.md
          echo "" >> release_notes.md
          
          # Get the previous tag for comparison
          PREV_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          
          # Add what's new section
          echo "### What's New" >> release_notes.md
          if [ -n "$PREV_TAG" ]; then
            echo "" >> release_notes.md
            # Get commit messages between tags
            git log --pretty=format:"- %s" $PREV_TAG..HEAD >> release_notes.md
            echo "" >> release_notes.md
            echo "" >> release_notes.md
            
            # Show changed files summary
            echo "### Changed Files" >> release_notes.md
            echo "" >> release_notes.md
            git diff --stat $PREV_TAG..HEAD | tail -n 1 >> release_notes.md
            echo "" >> release_notes.md
          else
            echo "Initial release" >> release_notes.md
          fi
          echo "" >> release_notes.md
          
          echo "### Download" >> release_notes.md
          echo "Download the zip file for your target architecture. All binaries are statically linked with musl libc." >> release_notes.md
          echo "" >> release_notes.md
          echo "For a complete list of tools and supported architectures, see the [README](https://github.com/${{ github.repository }}/blob/main/README.md)." >> release_notes.md

      - name: Create Release and Upload Assets
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Create the release using gh CLI
          gh release create ${{ steps.get_tag.outputs.tag }} \
            --title "Stheno Embedded Toolkit ${{ steps.get_tag.outputs.tag }}" \
            --notes-file release_notes.md \
            --repo ${{ github.repository }}
          
          # Upload all zip files
          for zip in stheno-toolkit-*.zip; do
            echo "Uploading $zip..."
            gh release upload ${{ steps.get_tag.outputs.tag }} "$zip" \
              --clobber \
              --repo ${{ github.repository }}
          done

      - name: Generate SHA256 checksums
        run: |
          sha256sum stheno-toolkit-*.zip > checksums.sha256
          gh release upload ${{ steps.get_tag.outputs.tag }} checksums.sha256 \
            --clobber \
            --repo ${{ github.repository }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}